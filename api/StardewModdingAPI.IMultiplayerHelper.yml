### YamlMime:ManagedReference
items:
- uid: StardewModdingAPI.IMultiplayerHelper
  commentId: T:StardewModdingAPI.IMultiplayerHelper
  id: IMultiplayerHelper
  parent: StardewModdingAPI
  children:
  - StardewModdingAPI.IMultiplayerHelper.GetActiveLocations
  - StardewModdingAPI.IMultiplayerHelper.GetNewID
  langs:
  - csharp
  - vb
  name: IMultiplayerHelper
  nameWithType: IMultiplayerHelper
  fullName: StardewModdingAPI.IMultiplayerHelper
  type: Interface
  source:
    remote:
      path: src/SMAPI/IMultiplayerHelper.cs
      branch: develop
      repo: https://github.com/hawkfalcon/SMAPI.git
    id: IMultiplayerHelper
    path: ../IMultiplayerHelper.cs
    startLine: 6
  assemblies:
  - StardewModdingAPI
  namespace: StardewModdingAPI
  summary: Provides multiplayer utilities.
  example: []
  syntax:
    content: 'public interface IMultiplayerHelper : IModLinked'
    content.vb: >-
      Public Interface IMultiplayerHelper
          Inherits IModLinked
  inheritedMembers:
  - StardewModdingAPI.IModLinked.ModID
  modifiers.csharp:
  - public
  - interface
  modifiers.vb:
  - Public
  - Interface
- uid: StardewModdingAPI.IMultiplayerHelper.GetNewID
  commentId: M:StardewModdingAPI.IMultiplayerHelper.GetNewID
  id: GetNewID
  parent: StardewModdingAPI.IMultiplayerHelper
  langs:
  - csharp
  - vb
  name: GetNewID()
  nameWithType: IMultiplayerHelper.GetNewID()
  fullName: StardewModdingAPI.IMultiplayerHelper.GetNewID()
  type: Method
  source:
    remote:
      path: src/SMAPI/IMultiplayerHelper.cs
      branch: develop
      repo: https://github.com/hawkfalcon/SMAPI.git
    id: GetNewID
    path: ../IMultiplayerHelper.cs
    startLine: 9
  assemblies:
  - StardewModdingAPI
  namespace: StardewModdingAPI
  summary: Get a new multiplayer ID.
  example: []
  syntax:
    content: long GetNewID()
    return:
      type: System.Int64
    content.vb: Function GetNewID As Long
  overload: StardewModdingAPI.IMultiplayerHelper.GetNewID*
- uid: StardewModdingAPI.IMultiplayerHelper.GetActiveLocations
  commentId: M:StardewModdingAPI.IMultiplayerHelper.GetActiveLocations
  id: GetActiveLocations
  parent: StardewModdingAPI.IMultiplayerHelper
  langs:
  - csharp
  - vb
  name: GetActiveLocations()
  nameWithType: IMultiplayerHelper.GetActiveLocations()
  fullName: StardewModdingAPI.IMultiplayerHelper.GetActiveLocations()
  type: Method
  source:
    remote:
      path: src/SMAPI/IMultiplayerHelper.cs
      branch: develop
      repo: https://github.com/hawkfalcon/SMAPI.git
    id: GetActiveLocations
    path: ../IMultiplayerHelper.cs
    startLine: 12
  assemblies:
  - StardewModdingAPI
  namespace: StardewModdingAPI
  summary: Get the locations which are being actively synced from the host.
  example: []
  syntax:
    content: IEnumerable<GameLocation> GetActiveLocations()
    return:
      type: System.Collections.Generic.IEnumerable{StardewValley.GameLocation}
    content.vb: Function GetActiveLocations As IEnumerable(Of GameLocation)
  overload: StardewModdingAPI.IMultiplayerHelper.GetActiveLocations*
references:
- uid: StardewModdingAPI
  commentId: N:StardewModdingAPI
  name: StardewModdingAPI
  nameWithType: StardewModdingAPI
  fullName: StardewModdingAPI
- uid: StardewModdingAPI.IModLinked.ModID
  commentId: P:StardewModdingAPI.IModLinked.ModID
  parent: StardewModdingAPI.IModLinked
  name: ModID
  nameWithType: IModLinked.ModID
  fullName: StardewModdingAPI.IModLinked.ModID
- uid: StardewModdingAPI.IModLinked
  commentId: T:StardewModdingAPI.IModLinked
  parent: StardewModdingAPI
  name: IModLinked
  nameWithType: IModLinked
  fullName: StardewModdingAPI.IModLinked
- uid: StardewModdingAPI.IMultiplayerHelper.GetNewID*
  commentId: Overload:StardewModdingAPI.IMultiplayerHelper.GetNewID
  name: GetNewID
  nameWithType: IMultiplayerHelper.GetNewID
  fullName: StardewModdingAPI.IMultiplayerHelper.GetNewID
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: StardewModdingAPI.IMultiplayerHelper.GetActiveLocations*
  commentId: Overload:StardewModdingAPI.IMultiplayerHelper.GetActiveLocations
  name: GetActiveLocations
  nameWithType: IMultiplayerHelper.GetActiveLocations
  fullName: StardewModdingAPI.IMultiplayerHelper.GetActiveLocations
- uid: System.Collections.Generic.IEnumerable{StardewValley.GameLocation}
  commentId: T:System.Collections.Generic.IEnumerable{StardewValley.GameLocation}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<GameLocation>
  nameWithType: IEnumerable<GameLocation>
  fullName: System.Collections.Generic.IEnumerable<StardewValley.GameLocation>
  nameWithType.vb: IEnumerable(Of GameLocation)
  fullName.vb: System.Collections.Generic.IEnumerable(Of StardewValley.GameLocation)
  name.vb: IEnumerable(Of GameLocation)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: StardewValley.GameLocation
    name: GameLocation
    nameWithType: GameLocation
    fullName: StardewValley.GameLocation
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: StardewValley.GameLocation
    name: GameLocation
    nameWithType: GameLocation
    fullName: StardewValley.GameLocation
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
