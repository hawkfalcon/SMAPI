### YamlMime:ManagedReference
items:
- uid: StardewModdingAPI.Events.EventArgsLocationObjectsChanged
  commentId: T:StardewModdingAPI.Events.EventArgsLocationObjectsChanged
  id: EventArgsLocationObjectsChanged
  parent: StardewModdingAPI.Events
  children:
  - StardewModdingAPI.Events.EventArgsLocationObjectsChanged.#ctor(StardewValley.GameLocation,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Xna.Framework.Vector2,StardewValley.Object}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Xna.Framework.Vector2,StardewValley.Object}})
  - StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Added
  - StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Location
  - StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Removed
  langs:
  - csharp
  - vb
  name: EventArgsLocationObjectsChanged
  nameWithType: EventArgsLocationObjectsChanged
  fullName: StardewModdingAPI.Events.EventArgsLocationObjectsChanged
  type: Class
  source:
    remote:
      path: src/SMAPI/Events/EventArgsLocationObjectsChanged.cs
      branch: develop
      repo: https://github.com/hawkfalcon/SMAPI.git
    id: EventArgsLocationObjectsChanged
    path: ../Events/EventArgsLocationObjectsChanged.cs
    startLine: 11
  assemblies:
  - StardewModdingAPI
  namespace: StardewModdingAPI.Events
  summary: Event arguments for a <xref href="StardewModdingAPI.Events.LocationEvents.ObjectsChanged" data-throw-if-not-resolved="false"></xref> event.
  example: []
  syntax:
    content: 'public class EventArgsLocationObjectsChanged : EventArgs'
    content.vb: >-
      Public Class EventArgsLocationObjectsChanged
          Inherits EventArgs
  inheritance:
  - System.Object
  - System.EventArgs
  inheritedMembers:
  - System.EventArgs.Empty
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Location
  commentId: P:StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Location
  id: Location
  parent: StardewModdingAPI.Events.EventArgsLocationObjectsChanged
  langs:
  - csharp
  - vb
  name: Location
  nameWithType: EventArgsLocationObjectsChanged.Location
  fullName: StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Location
  type: Property
  source:
    remote:
      path: src/SMAPI/Events/EventArgsLocationObjectsChanged.cs
      branch: develop
      repo: https://github.com/hawkfalcon/SMAPI.git
    id: Location
    path: ../Events/EventArgsLocationObjectsChanged.cs
    startLine: 17
  assemblies:
  - StardewModdingAPI
  namespace: StardewModdingAPI.Events
  summary: The location which changed.
  example: []
  syntax:
    content: public GameLocation Location { get; }
    parameters: []
    return:
      type: StardewValley.GameLocation
    content.vb: Public ReadOnly Property Location As GameLocation
  overload: StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Location*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Added
  commentId: P:StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Added
  id: Added
  parent: StardewModdingAPI.Events.EventArgsLocationObjectsChanged
  langs:
  - csharp
  - vb
  name: Added
  nameWithType: EventArgsLocationObjectsChanged.Added
  fullName: StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Added
  type: Property
  source:
    remote:
      path: src/SMAPI/Events/EventArgsLocationObjectsChanged.cs
      branch: develop
      repo: https://github.com/hawkfalcon/SMAPI.git
    id: Added
    path: ../Events/EventArgsLocationObjectsChanged.cs
    startLine: 20
  assemblies:
  - StardewModdingAPI
  namespace: StardewModdingAPI.Events
  summary: The objects added to the location.
  example: []
  syntax:
    content: public IEnumerable<KeyValuePair<Vector2, Object>> Added { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Xna.Framework.Vector2,StardewValley.Object}}
    content.vb: Public ReadOnly Property Added As IEnumerable(Of KeyValuePair(Of Vector2, Object))
  overload: StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Added*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Removed
  commentId: P:StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Removed
  id: Removed
  parent: StardewModdingAPI.Events.EventArgsLocationObjectsChanged
  langs:
  - csharp
  - vb
  name: Removed
  nameWithType: EventArgsLocationObjectsChanged.Removed
  fullName: StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Removed
  type: Property
  source:
    remote:
      path: src/SMAPI/Events/EventArgsLocationObjectsChanged.cs
      branch: develop
      repo: https://github.com/hawkfalcon/SMAPI.git
    id: Removed
    path: ../Events/EventArgsLocationObjectsChanged.cs
    startLine: 23
  assemblies:
  - StardewModdingAPI
  namespace: StardewModdingAPI.Events
  summary: The objects removed from the location.
  example: []
  syntax:
    content: public IEnumerable<KeyValuePair<Vector2, Object>> Removed { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Xna.Framework.Vector2,StardewValley.Object}}
    content.vb: Public ReadOnly Property Removed As IEnumerable(Of KeyValuePair(Of Vector2, Object))
  overload: StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Removed*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: StardewModdingAPI.Events.EventArgsLocationObjectsChanged.#ctor(StardewValley.GameLocation,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Xna.Framework.Vector2,StardewValley.Object}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Xna.Framework.Vector2,StardewValley.Object}})
  commentId: M:StardewModdingAPI.Events.EventArgsLocationObjectsChanged.#ctor(StardewValley.GameLocation,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Xna.Framework.Vector2,StardewValley.Object}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Xna.Framework.Vector2,StardewValley.Object}})
  id: '#ctor(StardewValley.GameLocation,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Xna.Framework.Vector2,StardewValley.Object}},System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Xna.Framework.Vector2,StardewValley.Object}})'
  parent: StardewModdingAPI.Events.EventArgsLocationObjectsChanged
  langs:
  - csharp
  - vb
  name: EventArgsLocationObjectsChanged(GameLocation, IEnumerable<KeyValuePair<Vector2, Object>>, IEnumerable<KeyValuePair<Vector2, Object>>)
  nameWithType: EventArgsLocationObjectsChanged.EventArgsLocationObjectsChanged(GameLocation, IEnumerable<KeyValuePair<Vector2, Object>>, IEnumerable<KeyValuePair<Vector2, Object>>)
  fullName: StardewModdingAPI.Events.EventArgsLocationObjectsChanged.EventArgsLocationObjectsChanged(StardewValley.GameLocation, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<Microsoft.Xna.Framework.Vector2, StardewValley.Object>>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<Microsoft.Xna.Framework.Vector2, StardewValley.Object>>)
  type: Constructor
  source:
    remote:
      path: src/SMAPI/Events/EventArgsLocationObjectsChanged.cs
      branch: develop
      repo: https://github.com/hawkfalcon/SMAPI.git
    id: .ctor
    path: ../Events/EventArgsLocationObjectsChanged.cs
    startLine: 33
  assemblies:
  - StardewModdingAPI
  namespace: StardewModdingAPI.Events
  summary: Construct an instance.
  example: []
  syntax:
    content: public EventArgsLocationObjectsChanged(GameLocation location, IEnumerable<KeyValuePair<Vector2, Object>> added, IEnumerable<KeyValuePair<Vector2, Object>> removed)
    parameters:
    - id: location
      type: StardewValley.GameLocation
      description: The location which changed.
    - id: added
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Xna.Framework.Vector2,StardewValley.Object}}
      description: The objects added to the location.
    - id: removed
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Xna.Framework.Vector2,StardewValley.Object}}
      description: The objects removed from the location.
    content.vb: Public Sub New(location As GameLocation, added As IEnumerable(Of KeyValuePair(Of Vector2, Object)), removed As IEnumerable(Of KeyValuePair(Of Vector2, Object)))
  overload: StardewModdingAPI.Events.EventArgsLocationObjectsChanged.#ctor*
  nameWithType.vb: EventArgsLocationObjectsChanged.EventArgsLocationObjectsChanged(GameLocation, IEnumerable(Of KeyValuePair(Of Vector2, Object)), IEnumerable(Of KeyValuePair(Of Vector2, Object)))
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: StardewModdingAPI.Events.EventArgsLocationObjectsChanged.EventArgsLocationObjectsChanged(StardewValley.GameLocation, System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of Microsoft.Xna.Framework.Vector2, StardewValley.Object)), System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of Microsoft.Xna.Framework.Vector2, StardewValley.Object)))
  name.vb: EventArgsLocationObjectsChanged(GameLocation, IEnumerable(Of KeyValuePair(Of Vector2, Object)), IEnumerable(Of KeyValuePair(Of Vector2, Object)))
references:
- uid: StardewModdingAPI.Events.LocationEvents.ObjectsChanged
  commentId: E:StardewModdingAPI.Events.LocationEvents.ObjectsChanged
  isExternal: true
- uid: StardewModdingAPI.Events
  commentId: N:StardewModdingAPI.Events
  name: StardewModdingAPI.Events
  nameWithType: StardewModdingAPI.Events
  fullName: StardewModdingAPI.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  commentId: T:System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.EventArgs.Empty
  commentId: F:System.EventArgs.Empty
  parent: System.EventArgs
  isExternal: true
  name: Empty
  nameWithType: EventArgs.Empty
  fullName: System.EventArgs.Empty
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Location*
  commentId: Overload:StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Location
  name: Location
  nameWithType: EventArgsLocationObjectsChanged.Location
  fullName: StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Location
- uid: StardewValley.GameLocation
  commentId: T:StardewValley.GameLocation
  parent: StardewValley
  isExternal: true
  name: GameLocation
  nameWithType: GameLocation
  fullName: StardewValley.GameLocation
- uid: StardewValley
  commentId: N:StardewValley
  isExternal: true
  name: StardewValley
  nameWithType: StardewValley
  fullName: StardewValley
- uid: StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Added*
  commentId: Overload:StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Added
  name: Added
  nameWithType: EventArgsLocationObjectsChanged.Added
  fullName: StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Added
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Xna.Framework.Vector2,StardewValley.Object}}
  commentId: T:System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Microsoft.Xna.Framework.Vector2,StardewValley.Object}}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  name: IEnumerable<KeyValuePair<Vector2, Object>>
  nameWithType: IEnumerable<KeyValuePair<Vector2, Object>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<Microsoft.Xna.Framework.Vector2, StardewValley.Object>>
  nameWithType.vb: IEnumerable(Of KeyValuePair(Of Vector2, Object))
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Collections.Generic.KeyValuePair(Of Microsoft.Xna.Framework.Vector2, StardewValley.Object))
  name.vb: IEnumerable(Of KeyValuePair(Of Vector2, Object))
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StardewValley.Object
    name: Object
    nameWithType: Object
    fullName: StardewValley.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: System.Collections.Generic.KeyValuePair
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Microsoft.Xna.Framework.Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Microsoft.Xna.Framework.Vector2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: StardewValley.Object
    name: Object
    nameWithType: Object
    fullName: StardewValley.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: System.Collections.Generic.IEnumerable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Removed*
  commentId: Overload:StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Removed
  name: Removed
  nameWithType: EventArgsLocationObjectsChanged.Removed
  fullName: StardewModdingAPI.Events.EventArgsLocationObjectsChanged.Removed
- uid: StardewModdingAPI.Events.EventArgsLocationObjectsChanged.#ctor*
  commentId: Overload:StardewModdingAPI.Events.EventArgsLocationObjectsChanged.#ctor
  name: EventArgsLocationObjectsChanged
  nameWithType: EventArgsLocationObjectsChanged.EventArgsLocationObjectsChanged
  fullName: StardewModdingAPI.Events.EventArgsLocationObjectsChanged.EventArgsLocationObjectsChanged
