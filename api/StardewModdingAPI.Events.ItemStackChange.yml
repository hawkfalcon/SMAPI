### YamlMime:ManagedReference
items:
- uid: StardewModdingAPI.Events.ItemStackChange
  commentId: T:StardewModdingAPI.Events.ItemStackChange
  id: ItemStackChange
  parent: StardewModdingAPI.Events
  children:
  - StardewModdingAPI.Events.ItemStackChange.ChangeType
  - StardewModdingAPI.Events.ItemStackChange.Item
  - StardewModdingAPI.Events.ItemStackChange.StackChange
  langs:
  - csharp
  - vb
  name: ItemStackChange
  nameWithType: ItemStackChange
  fullName: StardewModdingAPI.Events.ItemStackChange
  type: Class
  source:
    remote:
      path: src/SMAPI/Events/ItemStackChange.cs
      branch: develop
      repo: https://github.com/hawkfalcon/SMAPI.git
    id: ItemStackChange
    path: ../Events/ItemStackChange.cs
    startLine: 5
  assemblies:
  - StardewModdingAPI
  namespace: StardewModdingAPI.Events
  summary: Represents an inventory slot that changed.
  example: []
  syntax:
    content: public class ItemStackChange
    content.vb: Public Class ItemStackChange
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: StardewModdingAPI.Events.ItemStackChange.Item
  commentId: P:StardewModdingAPI.Events.ItemStackChange.Item
  id: Item
  parent: StardewModdingAPI.Events.ItemStackChange
  langs:
  - csharp
  - vb
  name: Item
  nameWithType: ItemStackChange.Item
  fullName: StardewModdingAPI.Events.ItemStackChange.Item
  type: Property
  source:
    remote:
      path: src/SMAPI/Events/ItemStackChange.cs
      branch: develop
      repo: https://github.com/hawkfalcon/SMAPI.git
    id: Item
    path: ../Events/ItemStackChange.cs
    startLine: 11
  assemblies:
  - StardewModdingAPI
  namespace: StardewModdingAPI.Events
  summary: The item in the slot.
  example: []
  syntax:
    content: public Item Item { get; set; }
    parameters: []
    return:
      type: StardewValley.Item
    content.vb: Public Property Item As Item
  overload: StardewModdingAPI.Events.ItemStackChange.Item*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: StardewModdingAPI.Events.ItemStackChange.StackChange
  commentId: P:StardewModdingAPI.Events.ItemStackChange.StackChange
  id: StackChange
  parent: StardewModdingAPI.Events.ItemStackChange
  langs:
  - csharp
  - vb
  name: StackChange
  nameWithType: ItemStackChange.StackChange
  fullName: StardewModdingAPI.Events.ItemStackChange.StackChange
  type: Property
  source:
    remote:
      path: src/SMAPI/Events/ItemStackChange.cs
      branch: develop
      repo: https://github.com/hawkfalcon/SMAPI.git
    id: StackChange
    path: ../Events/ItemStackChange.cs
    startLine: 14
  assemblies:
  - StardewModdingAPI
  namespace: StardewModdingAPI.Events
  summary: The amount by which the item&apos;s stack size changed.
  example: []
  syntax:
    content: public int StackChange { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property StackChange As Integer
  overload: StardewModdingAPI.Events.ItemStackChange.StackChange*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: StardewModdingAPI.Events.ItemStackChange.ChangeType
  commentId: P:StardewModdingAPI.Events.ItemStackChange.ChangeType
  id: ChangeType
  parent: StardewModdingAPI.Events.ItemStackChange
  langs:
  - csharp
  - vb
  name: ChangeType
  nameWithType: ItemStackChange.ChangeType
  fullName: StardewModdingAPI.Events.ItemStackChange.ChangeType
  type: Property
  source:
    remote:
      path: src/SMAPI/Events/ItemStackChange.cs
      branch: develop
      repo: https://github.com/hawkfalcon/SMAPI.git
    id: ChangeType
    path: ../Events/ItemStackChange.cs
    startLine: 17
  assemblies:
  - StardewModdingAPI
  namespace: StardewModdingAPI.Events
  summary: How the inventory slot changed.
  example: []
  syntax:
    content: public ChangeType ChangeType { get; set; }
    parameters: []
    return:
      type: StardewModdingAPI.Events.ChangeType
    content.vb: Public Property ChangeType As ChangeType
  overload: StardewModdingAPI.Events.ItemStackChange.ChangeType*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: StardewModdingAPI.Events
  commentId: N:StardewModdingAPI.Events
  name: StardewModdingAPI.Events
  nameWithType: StardewModdingAPI.Events
  fullName: StardewModdingAPI.Events
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: StardewModdingAPI.Events.ItemStackChange.Item*
  commentId: Overload:StardewModdingAPI.Events.ItemStackChange.Item
  name: Item
  nameWithType: ItemStackChange.Item
  fullName: StardewModdingAPI.Events.ItemStackChange.Item
- uid: StardewValley.Item
  commentId: T:StardewValley.Item
  parent: StardewValley
  isExternal: true
  name: Item
  nameWithType: Item
  fullName: StardewValley.Item
- uid: StardewValley
  commentId: N:StardewValley
  isExternal: true
  name: StardewValley
  nameWithType: StardewValley
  fullName: StardewValley
- uid: StardewModdingAPI.Events.ItemStackChange.StackChange*
  commentId: Overload:StardewModdingAPI.Events.ItemStackChange.StackChange
  name: StackChange
  nameWithType: ItemStackChange.StackChange
  fullName: StardewModdingAPI.Events.ItemStackChange.StackChange
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: StardewModdingAPI.Events.ItemStackChange.ChangeType*
  commentId: Overload:StardewModdingAPI.Events.ItemStackChange.ChangeType
  name: ChangeType
  nameWithType: ItemStackChange.ChangeType
  fullName: StardewModdingAPI.Events.ItemStackChange.ChangeType
- uid: StardewModdingAPI.Events.ChangeType
  commentId: T:StardewModdingAPI.Events.ChangeType
  parent: StardewModdingAPI.Events
  name: ChangeType
  nameWithType: ChangeType
  fullName: StardewModdingAPI.Events.ChangeType
